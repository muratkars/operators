{{- if .Params.NDM_ENABLED }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .OperatorName }}-ndm
  namespace: {{ .Namespace }}
    app: {{ .OperatorName }}
    component: ndm
    openebs.io/version: {{ .Params.APP_VERSION }}
spec:
  selector:
    matchLabels:
      app: {{ .OperatorName }}
      component: ndm
      name: openebs-ndm
      openebs.io/component-name: ndm
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .OperatorName }}
        component: ndm
        openebs.io/component-name: ndm
        name: openebs-ndm
        openebs.io/version: {{ .Params.APP_VERSION }}
    spec:
      serviceAccountName: {{ .OperatorName }}-maya-operator
      hostNetwork: true
      containers:
      - name: {{ .OperatorName }}-ndm
        image: quay.io/openebs/node-disk-manager-amd64:{{ .Params.NDM_VERSION }}"
        imagePullPolicy: {{ .Params.IMAGE_PULLPOLICY }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: config
          mountPath: /host/node-disk-manager.config
          subPath: node-disk-manager.config
          readOnly: true
        - name: udev
          mountPath: /run/udev
        - name: procmount
          mountPath: /host/proc
          readOnly: true
        - name: sparsepath
          mountPath: /var/openebs/sparse
        env:
        # namespace in which NDM is installed will be passed to NDM Daemonset
        # as environment variable
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # pass hostname as env variable using downward API to the NDM container
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # specify the directory where the sparse files need to be created.
        # if not specified, then sparse files will not be created.
        - name: SPARSE_FILE_DIR
          value: "/var/openebs/sparse"
        # Size(bytes) of the sparse file to be created.
        - name: SPARSE_FILE_SIZE
          value: "10737418240"
        # Specify the number of sparse files to be created
        - name: SPARSE_FILE_COUNT
          value: "0"
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*ndm"
          initialDelaySeconds: {{ .Params.NDM_HC_DELAY }}
          periodSeconds: {{ .Params.NDM_HC_PERIOD }}
      volumes:
      - name: config
        configMap:
          name: {{ .OperatorName }}-ndm-config
      - name: udev
        hostPath:
          path: /run/udev
          type: Directory
      # mount /proc (to access mount file of process 1 of host) inside container
      # to read mount-point of disks and partitions
      - name: procmount
        hostPath:
          path: /proc
          type: Directory
      - name: sparsepath
        hostPath:
          path: /var/openebs/sparse
      # By default the node-disk-manager will be run on all kubernetes nodes
      # If you would like to limit this to only some nodes, say the nodes
      # that have storage attached, you could label those node and use
      # nodeSelector.
      #
      # e.g. label the storage nodes with - "openebs.io/nodegroup"="storage-node"
      # kubectl label node <node-name> "openebs.io/nodegroup"="storage-node"
      #nodeSelector:
      #  "openebs.io/nodegroup": "storage-node"
{{- if .Params.NDM_NODE_SELECTOR }}
      nodeSelector:
{{ toYaml .Params.NDM_NODE_SELECTOR | indent 8 }}
{{- end }}
{{- if .Params.NDM_TOLERATIONS }}
      tolerations:
{{ toYaml .Params.NDM_TOLERATIONS | indent 8 }}
{{- end }}
{{- end }}
